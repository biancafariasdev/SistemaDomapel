@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Domapel.Models.ViewModels.OrderViewModel>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

@{
    ViewData["Title"] = "Pedidos";
    Layout = "_Layout";
}
<style>
    .custom-width {
        width: 150%;
    }
</style>
@{
    var queryParameters = new
    {
        page = 1, 
        orderIdFilter = ViewData["orderIdFilter"],
        selectedCorporateNameId = ViewData["selectedCorporateNameId"],
        corporateNameFilter = ViewData["corporateNameFilter"],
        selectedVendorId = ViewData["selectedVendorId"],
        dateFilter = ViewData["dateFilter"]
    };
}

<h2>Pedidos</h2>

<a asp-action="AddEdit" class="btn btn-success mb-2">Adicionar Novo Pedido</a>

<form asp-action="Index" method="get" id="filterForm">
    <div class="row">
        <div class="col-sm-2 d-flex align-items-center">
            <div class="form-group mb-0 flex-grow-1">
                <label for="OrderIdFilter" class="sr-only">Buscar por Pedido</label>
                <input type="text" name="orderIdFilter" class="form-control" id="OrderIdFilter" placeholder="Digite o número do pedido" />
            </div>
        </div>
        <div class="col-sm-2 d-flex align-items-center">
            <div class="form-group mb-0 flex-grow-1">
                <label for="SelectedCorporateNameId" class="sr-only">Buscar por Razão Social</label>
                <select name="selectedCorporateNameId" asp-items="@ViewData["CorporateNames"] as SelectList" class="form-control" id="SelectedCorporateNameId">
                    <option value="">Selecione</option>
                </select>
            </div>
        </div>
        <div class="col-sm-3 d-flex align-items-center">
            <div class="form-group mb-0 flex-grow-1">
                <label for="SelectedVendorId" class="sr-only">Buscar por Vendedor</label>
                <select name="selectedVendorId" asp-items="@ViewData["Vendors"] as SelectList" class="form-control" id="SelectedVendorId">
                    <option value="">Selecione</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2 d-flex align-items-center">
            <div class="form-group mb-0 flex-grow-1">
                <label for="DateFilter" class="sr-only">Buscar por Data</label>
                <input type="date" name="dateFilter" class="form-control" id="DateFilter" />
            </div>
        </div>
        <div class="col-sm-2 d-flex align-items-center justify-content-end">
            <button type="submit" class="btn btn-primary custom-width">Filtrar</button>
        </div>
    </div>
</form>

<table id="tabelaPedidos" class="table">
    <thead>
        <tr>
            <th>Pedido</th>
            <th>Data</th>
            <th>Razão Social</th>
            <th>Vendedor</th>
            <th>Valor de comissão</th>
            <th>Desconto</th>
            <th>Valor final</th>
            <th>Quantidade de Itens</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.OrderId</td>
                <td>@order.OrderDate.ToShortDateString()</td>
                <td>@order.CorporateName</td>
                <td>@order.VendorName</td>
                <td>@order.CommissionValue.ToString("F2")</td>
                <td>@String.Format("{0:C}", order.Discount)</td>
                <td>@String.Format("{0:C}", order.FinalValue)</td>
                <td>@order.ItemCount</td>
                <td>
                    <a asp-action="Details" asp-route-id="@order.OrderId" target="_blank" class="btn btn-info">Imprimir</a>
                    <a asp-action="AddEdit" asp-route-id="@order.OrderId" class="btn btn-primary">Editar</a>
                    <a href="#" class="btn btn-danger delete-order"
                       data-order-id="@order.OrderId"
                       data-delete-url="@Url.Action("DeleteConfirmed", "Order", new { id = order.OrderId })"
                       data-toggle="modal"
                       data-target="#deleteConfirmationModal">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Tem certeza de que deseja excluir este pedido?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post" action="" style="display: none;">
                    @Html.AntiForgeryToken()
                </form>
                <button type="button" class="btn btn-danger" form="deleteForm" id="confirmDelete">Excluir</button>
            </div>
        </div>
    </div>
</div>

<div class="text-center mt-3">
    @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new
        {
            page = pageNumber,
            queryParameters.orderIdFilter,
            queryParameters.selectedCorporateNameId,
            queryParameters.corporateNameFilter,
            queryParameters.selectedVendorId,
            queryParameters.dateFilter
        }),
            new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Never,
        DisplayLinkToLastPage = PagedListDisplayMode.Never,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        DisplayPageCountAndCurrentLocation = false,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        MaximumPageNumbersToDisplay = 5,
        LinkToPreviousPageFormat = "<i class='fas fa-arrow-left'></i> Anterior",
        LinkToNextPageFormat = "Próxima <i class='fas fa-arrow-right'></i>",
        UlElementClasses = new[] { "pagination", "justify-content-center" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>



@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        var orderIdToDelete;

        $(document).ready(function () {
            $('.delete-order').on('click', function (e) {
                e.preventDefault();
                orderIdToDelete = $(this).data('order-id');
                console.log("Order ID to delete: ", orderIdToDelete);
            });

            $('#confirmDelete').on('click', function () {
                $.ajax({
                    url: '@Url.Action("DeleteConfirmed", "Order")',
                    type: 'POST',
                    data: {
                        id: orderIdToDelete,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            $('#deleteConfirmationModal').modal('hide');
                            window.location.reload();
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Erro ao excluir o pedido:", error);
                    }
                });
            });
        });
    </script>
}
